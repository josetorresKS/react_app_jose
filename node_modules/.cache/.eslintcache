[{"/home/josemt/my-first-app/src/index.js":"1","/home/josemt/my-first-app/src/App.js":"2","/home/josemt/my-first-app/src/TodoList.js":"3","/home/josemt/my-first-app/src/Todo.js":"4"},{"size":163,"mtime":1636310083199,"results":"5","hashOfConfig":"6"},{"size":1410,"mtime":1636400000985,"results":"7","hashOfConfig":"6"},{"size":246,"mtime":1636394454980,"results":"8","hashOfConfig":"6"},{"size":403,"mtime":1636399997777,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2q5bje",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/josemt/my-first-app/src/index.js",[],"/home/josemt/my-first-app/src/App.js",["19"],"import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport { nanoid } from 'nanoid'\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [... prevTodos, {id:nanoid(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n    <TodoList todos={todos} toggleTodo={toggleTodo} />\n    <input ref={todoNameRef} type=\"text\" />\n    <button onClick={handleAddTodo}>Add Todo</button>\n    <button onClick={handleClearTodos}>Clear Compleated</button>\n    <div> {todos.filter(todo => !todo.complete).length} left to do</div>\n\n    </>\n    )\n    \n}\n\nexport default App;\n","/home/josemt/my-first-app/src/TodoList.js",[],"/home/josemt/my-first-app/src/Todo.js",[],{"ruleId":"20","severity":1,"message":"21","line":31,"column":18,"nodeType":"22","messageId":"23","endLine":31,"endColumn":19,"fix":"24"},"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"25","text":"26"},[835,836],""]